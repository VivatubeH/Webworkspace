/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-09-27 00:50:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin.member_002dmanagement;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import utils.Pagination;
import utils.Util;
import domain.user.vo.User;
import java.util.List;
import domain.admin.dao.AdminDao;
import utils.Util;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/admin/common/sidebar.jsp", Long.valueOf(1727275102869L));
    _jspx_dependants.put("/common/common.jsp", Long.valueOf(1727275102794L));
    _jspx_dependants.put("/admin/common/login.jsp", Long.valueOf(1727275102781L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("utils.Pagination");
    _jspx_imports_classes.add("utils.Util");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("domain.user.vo.User");
    _jspx_imports_classes.add("domain.admin.dao.AdminDao");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>회원 관리 페이지</title>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/guide.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" crossorigin=\"anonymous\"></script>\r\n");

	// 전에 온 페이지 주소 저장
	String returnURL = request.getRequestURL().toString();
	String queryString = request.getQueryString();
	returnURL += queryString != null ? "?" + queryString : "";

	session.setAttribute("returnURL", returnURL);	
	
	// 캐시 삭제
	response.setHeader("Cache-Control", "no-cache, no-store");
	response.setHeader("Pragma", "no-cache");
	response.setDateHeader("Expires", 0);

      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    .btn-danger {\r\n");
      out.write("        background-color: #dc3545; \r\n");
      out.write("        border-color: #dc3545; \r\n");
      out.write("    }\r\n");
      out.write("    #userId {\r\n");
      out.write("    	text-decoration: underline;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("	관리자의 모든 디렉토리에서 관리자인지 여부를 검사하기 위한 공통 기능.	\r\n");
      out.write("-->\r\n");

	// user/login.jsp에서 세션에서 USERID, USERNICKNAME, USERTYPE를 가져온다.
	// 저장된 상태로 admin/index.jsp로 전달된다.
	String userId = (String)session.getAttribute("USERID");
	String userNickName = (String)session.getAttribute("USERNICKNAME");
	String userType = (String)session.getAttribute("USERTYPE");
	
	// 만약에 userType이 "null"이거나 ADMIN이 아니면 관리자로 로그인 된 것이 아니니 
	// 바로 ../user/login-form.jsp로 돌려보낸다.
	if (userType == null || !userType.equals("ADMIN")) {
		response.sendRedirect("/user/login-form.jsp?error=admin");
		return;
	}

      out.write("\r\n");
      out.write("<div class=\"d-flex\">\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("	모든 관리자 페이지에서 공통으로 사용할 사이드바	\r\n");
      out.write("-->\r\n");
      out.write(" <div class=\"sidebar p-3\" style=\"background-color: #808080; color:white;\">\r\n");
      out.write("        <div class=\"d-flex align-items-center mb-4\">\r\n");
      out.write("            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"56\" height=\"56\" fill=\"currentColor\" class=\"bi bi-person-gear\" viewBox=\"0 0 16 16\">\r\n");
      out.write(" 			<path d=\"M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m.256 7a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1zm3.63-4.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382zM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0\"></path>\r\n");
      out.write("			</svg>\r\n");
      out.write("            <span>admin</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <ul class=\"nav flex-column\">\r\n");
      out.write("        	<li class=\"nav-item\">\r\n");
      out.write("            	<a class=\"nav-link\" href=\"/admin/index.jsp\">\r\n");
      out.write("            		<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-person-gear\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					<path d=\"M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m.256 7a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1zm3.63-4.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382zM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0\"></path>\r\n");
      out.write("					</svg> 관리자 홈\r\n");
      out.write("            	</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/admin/qna-management/list.jsp\">\r\n");
      out.write("                	 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-clipboard2\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					 <path d=\"M3.5 2a.5.5 0 0 0-.5.5v12a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-12a.5.5 0 0 0-.5-.5H12a.5.5 0 0 1 0-1h.5A1.5 1.5 0 0 1 14 2.5v12a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-12A1.5 1.5 0 0 1 3.5 1H4a.5.5 0 0 1 0 1z\"/>\r\n");
      out.write("  					 <path d=\"M10 .5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5.5.5 0 0 1-.5.5.5.5 0 0 0-.5.5V2a.5.5 0 0 0 .5.5h5A.5.5 0 0 0 11 2v-.5a.5.5 0 0 0-.5-.5.5.5 0 0 1-.5-.5\"/>\r\n");
      out.write(" 					 </svg> 문의/신고 관리\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/admin/member-management/list.jsp\">\r\n");
      out.write("                 	<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-people\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					<path d=\"M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1zm-7.978-1L7 12.996c.001-.264.167-1.03.76-1.72C8.312 10.629 9.282 10 11 10c1.717 0 2.687.63 3.24 1.276.593.69.758 1.457.76 1.72l-.008.002-.014.002zM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0M6.936 9.28a6 6 0 0 0-1.23-.247A7 7 0 0 0 5 9c-4 0-5 3-5 4q0 1 1 1h4.216A2.24 2.24 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816M4.92 10A5.5 5.5 0 0 0 4 13H1c0-.26.164-1.03.76-1.724.545-.636 1.492-1.256 3.16-1.275ZM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0m3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4\"/>\r\n");
      out.write("					</svg> 회원 관리\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/admin/statistics-management/list.jsp\">\r\n");
      out.write("                	<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-bar-chart\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					<path d=\"M4 11H2v3h2zm5-4H7v7h2zm5-5v12h-2V2zm-2-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM6 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm-5 4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1z\"/>\r\n");
      out.write("					</svg> 사이트 통계\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/index.jsp\">\r\n");
      out.write("                	<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-house-door\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					<path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4z\"/>\r\n");
      out.write("					</svg> 사이트 홈\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            \r\n");
      out.write("        </ul>\r\n");
      out.write("        <div class=\"mt-auto\">\r\n");
      out.write("            <a class=\"btn btn-danger w-100\" href=\"/user/logout.jsp\" style=\"color: white;\">LOGOUT</a>\r\n");
      out.write("        </div>\r\n");
      out.write("  </div>");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("	요청 URL\r\n");
      out.write("		http://admin/member-management/list.jsp\r\n");
      out.write("		http://admin/member-management/list.jsp?page=xxx\r\n");
      out.write("	요청 URI\r\n");
      out.write("		/admin/member-management/list.jsp\r\n");
      out.write("	쿼리스트링\r\n");
      out.write("		없음\r\n");
      out.write("		page=7\r\n");
      out.write("	요청 파라미터 정보\r\n");
      out.write("		name 	value\r\n");
      out.write("		--------------\r\n");
      out.write("		\"page\"	\"2\"\r\n");
      out.write("-->\r\n");

	// 요청 파라미터 값을 조회한다.
	// 요청한 페이지번호를 조회한다. 페이지 번호가 없으면 1을 반환한다.
	int pageNo = Util.toInt(request.getParameter("page"), 1);
	String keyword = request.getParameter("keyword");
	
	int totalRows = 0;
	Pagination pagination = null;
	List<User> users = null;
	AdminDao adminDao = new AdminDao();
	
	totalRows = adminDao.countTotalMembersInBookstore();
	pagination = new Pagination(pageNo, totalRows);
	users = adminDao.getUsersInRange(pagination.getBegin(), pagination.getEnd());

      out.write("\r\n");
      out.write("    <div class=\"main-content p-3 flex-grow-1 text-center\">\r\n");
      out.write("    \r\n");
      out.write("	<br/>\r\n");
      out.write("	\r\n");
      out.write("    	<h1>사이트 이용자 목록</h1>\r\n");
      out.write("    	<br/>\r\n");
      out.write("    	<h5><mark><strong>관리를 원하는 회원의 아이디를 클릭해 주세요.</strong></mark></h5>\r\n");
      out.write("    	<br/>\r\n");
      out.write("    	<table class=\"table table-bordered filter-table\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th scope=\"col\" class=\"text-center\">유저 번호</th>\r\n");
      out.write("					<th scope=\"col\" class=\"text-center\">유저 아이디</th>\r\n");
      out.write("					<th scope=\"col\" class=\"text-center\">유저 닉네임</th>\r\n");
      out.write("					<th scope=\"col\" class=\"text-center\">유저 이메일</th>\r\n");
      out.write("					<th scope=\"col\" class=\"text-center\">유저 연락처</th>\r\n");
      out.write("					<th scope=\"col\" class=\"text-center\">유저 주소</th>\r\n");
      out.write("					<th scope=\"col\" class=\"text-center\">유저 활성화 여부</th>\r\n");
      out.write("					<th scope=\"col\" class=\"text-center\">관리자 여부</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("			<tbody>\r\n");

	int rowNumber = pagination.getBegin();
	for (User user : users) {

      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>");
      out.print(rowNumber++ );
      out.write("</td>\r\n");
      out.write("					<td id=\"userId\"><a href=\"detail.jsp?no=");
      out.print(user.getUserNo() );
      out.write("\" class=\"link-info\">");
      out.print(user.getId() );
      out.write("</a></td>\r\n");
      out.write("					<td>");
      out.print(user.getNickname() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(user.getEmail() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(user.getPhone() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(user.getAddress() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(user.getStatus() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(user.getType().equals("ADMIN") ? 
					"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-person-gear\" viewBox=\"0 0 16 16\">"
					+ "<path d=\"M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m.256 7a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1zm3.63-4.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382zM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0\"/>"
					+ "</svg>" + " 관리자" 
					: "사용자" );
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");

	}

      out.write("\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		\r\n");
      out.write("		<div>\r\n");
      out.write("	");

		if (pagination.getTotalRows() > 0) {
			int beginPage = pagination.getBeginPage();
			int endPage = pagination.getEndPage();
	
      out.write("\r\n");
      out.write("			<ul class=\"pagination justify-content-center\">\r\n");
      out.write("				<li class=\"page-item ");
      out.print(pagination.isFirst() ? "disabled" : "" );
      out.write("\">\r\n");
      out.write("					<a href=\"list.jsp?page=");
      out.print(pagination.getPrev() );
      out.write("\" class=\"page-link\">이전</a>\r\n");
      out.write("				</li>	\r\n");
      out.write("	");

		for (int num = beginPage; num <= endPage; num++) {
	
      out.write("\r\n");
      out.write("				<li class=\"page-item\">\r\n");
      out.write("					<a href=\"list.jsp?page=");
      out.print(num );
      out.write("\"\r\n");
      out.write("						class=\"page-link ");
      out.print(pageNo == num ? "active" : "" );
      out.write("\">\r\n");
      out.write("						");
      out.print(num );
      out.write("	\r\n");
      out.write("					</a>\r\n");
      out.write("				</li>\r\n");
      out.write("	");

		}
	
      out.write("\r\n");
      out.write("				<li class=\"page-item ");
      out.print(pagination.isLast() ? "disabled" : "");
      out.write("\">\r\n");
      out.write("					<a href=\"list.jsp?page=");
      out.print(pagination.getNext() );
      out.write("\" class=\"page-link\">다음</a>\r\n");
      out.write("				</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("	");

		}
	
      out.write("\r\n");
      out.write("	    </div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
