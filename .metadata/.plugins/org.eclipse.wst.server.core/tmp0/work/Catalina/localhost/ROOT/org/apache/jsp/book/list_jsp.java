/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-09-27 02:53:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.book;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import domain.sell.vo.Board;
import utils.Pagination;
import domain.book.vo.Category;
import domain.book.dao.CategoryDao;
import utils.Util;
import domain.book.dao.BookDao;
import domain.book.vo.Book;
import java.util.List;
import utils.Util;
import domain.user.vo.User;
import domain.admin.dao.AdminDao;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/common/common.jsp", Long.valueOf(1727275102794L));
    _jspx_dependants.put("/common/header.jsp", Long.valueOf(1727405496026L));
    _jspx_dependants.put("/common/footer.jsp", Long.valueOf(1727395435161L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(14);
    _jspx_imports_classes.add("domain.book.vo.Book");
    _jspx_imports_classes.add("utils.Pagination");
    _jspx_imports_classes.add("domain.book.dao.CategoryDao");
    _jspx_imports_classes.add("utils.Util");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("domain.sell.vo.Board");
    _jspx_imports_classes.add("domain.user.vo.User");
    _jspx_imports_classes.add("domain.book.dao.BookDao");
    _jspx_imports_classes.add("domain.admin.dao.AdminDao");
    _jspx_imports_classes.add("domain.book.vo.Category");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<title>2조 세미 프로젝트 ㅣ 도서 검색</title>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/guide.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" crossorigin=\"anonymous\"></script>\r\n");

	// 전에 온 페이지 주소 저장
	String returnURL = request.getRequestURL().toString();
	String queryString = request.getQueryString();
	returnURL += queryString != null ? "?" + queryString : "";

	session.setAttribute("returnURL", returnURL);	
	
	// 캐시 삭제
	response.setHeader("Cache-Control", "no-cache, no-store");
	response.setHeader("Pragma", "no-cache");
	response.setDateHeader("Expires", 0);

      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		function getCategoryNo(event)  {\r\n");
      out.write("			let ctgr = 0;\r\n");
      out.write("			let radioId = event.target.id;\r\n");
      out.write("			ctgr = document.getElementById(radioId).value;\r\n");
      out.write("			\r\n");
      out.write("			document.querySelector(\"input[name=ctgr]\").value = ctgr;\r\n");
      out.write("			document.querySelector(\"input[name=page]\").value = 1;\r\n");
      out.write("			document.getElementById(\"hiddenForm\").submit();\r\n");
      out.write("		}\r\n");
      out.write("   </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<header id=\"divHeader\">\r\n");
      out.write("    <div class=\"headerTop\">\r\n");
      out.write("        <div class=\"center flexBetween\">\r\n");
      out.write("            <a href=\"/index.jsp\" class=\"logo\">\r\n");
      out.write("            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" fill=\"currentColor\" class=\"bi bi-book\" viewBox=\"0 0 16 16\">\r\n");
      out.write("                    <path d=\"M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783\"/>\r\n");
      out.write("                </svg>   \r\n");
      out.write("                <span class=\"bold\">BOOKOREA</span>\r\n");
      out.write("            </a>\r\n");
      out.write("            <ul id=\"divGlobalMenu\" class=\"flex\">\r\n");
      out.write("                ");

                    int USERNO = (Integer) session.getAttribute("USERNO");
                    String USERID = (String) session.getAttribute("USERID");
                    String USERNICKNAME = (String) session.getAttribute("USERNICKNAME");
                    String USERTYPE = (String) session.getAttribute("USERTYPE");
                    
                    if (USERID != null && !USERID.isEmpty() && USERTYPE.equals("USER")) {
                
      out.write("\r\n");
      out.write("                <li>\r\n");
      out.write("                	<strong>");
      out.print(USERNICKNAME);
      out.write("</strong>님 환영합니다.\r\n");
      out.write("                	<a href=\"/user/logout.jsp\" class=\"btn btn-sm\">로그아웃</a>\r\n");
      out.write("               	</li>\r\n");
      out.write("                ");

                } else if (USERID != null && !USERID.isEmpty() && USERTYPE.equals("ADMIN")) {
                
      out.write("\r\n");
      out.write("                <li>\r\n");
      out.write("	                <strong>");
      out.print(USERNICKNAME);
      out.write("</strong>님 환영합니다.\r\n");
      out.write("                	<a href=\"/user/logout.jsp\" class=\"btn btn-sm\">로그아웃</a>\r\n");
      out.write("               	</li>\r\n");
      out.write("                <li><a href=\"../admin/index.jsp\" class=\"\"><mark>관리자 홈페이지로 이동</mark></a></li>\r\n");
      out.write("                ");

                } else {
                
      out.write("\r\n");
      out.write("                <li><a href=\"/user/login-form.jsp\">로그인</a></li>\r\n");
      out.write("                <li><a href=\"/user/join-form.jsp\">회원가입</a></li>\r\n");
      out.write("                ");

                    }
                
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"headerBot\">\r\n");
      out.write("        <div class=\"center\">\r\n");
      out.write("            <div class=\"searchW\">\r\n");
      out.write("                <p class=\"bold\">찾고 있는 중고 도서를 검색해보세요</p>\r\n");
      out.write("                <div class=\"searchForm\">\r\n");
      out.write("                    <form action=\"/book/list.jsp\" method=\"get\" class=\"inputBox\">\r\n");
      out.write("                        <fieldset class=\"searchBox flex\">\r\n");
      out.write("                            <legend>도서 검색</legend>\r\n");
      out.write("                            <label for=\"searchBook\" class=\"searchBook\">\r\n");
      out.write("                                <input type=\"text\" id=\"searchBook\" name=\"keyword\" class=\"searchInput\" placeholder=\"도서명을 입력해주세요.\" autocomplete=\"off\" onkeyup=\"checkInput();\">\r\n");
      out.write("                            </label>\r\n");
      out.write("                            <input type=\"image\" src=\"/images/search.svg\" class=\"searchBtn\" alt=\"도서 검색\">\r\n");
      out.write("                        </fieldset>\r\n");
      out.write("                    </form>\r\n");
      out.write("            		<div class=\"searchList hide\">\r\n");
      out.write("	       				<ul class=\"searchUl p-0\"></ul>\r\n");
      out.write("	       			</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"divTopMenu\">\r\n");
      out.write("        <div class=\"center\">\r\n");
      out.write("            <ul class=\"flexCenter\">\r\n");
      out.write("                <li><a href=\"/book/list.jsp\">전체 도서</a></li>\r\n");
      out.write("                <li><a href=\"/sell/list.jsp\">책 판매합니다</a></li>\r\n");
      out.write("                <li><a href=\"/purchase/list.jsp\">책 구매합니다</a></li>\r\n");
      out.write("                <li><a href=\"/qna/list.jsp\">문의 게시판</a></li>\r\n");
      out.write("                ");

                    if (USERID != null && !USERID.isEmpty()) {
                
      out.write("\r\n");
      out.write("                <li><a href=\"/user/myPage.jsp\">마이 페이지</a></li>\r\n");
      out.write("                ");

                    }
                
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</header>\r\n");
      out.write("<script>\r\n");
      out.write("	const searchInput = document.querySelector(\"#searchBook\");\r\n");
      out.write("	const searchBox = document.querySelector(\".searchList\");\r\n");
      out.write("	const searchUl = document.querySelector(\".searchUl\");\r\n");
      out.write("	\r\n");
      out.write("	/* input type text(#searchBook)의 onkeyup 이벤트 */\r\n");
      out.write("	const checkInput = () => {\r\n");
      out.write("	    const beforeInput = searchInput.value;\r\n");
      out.write("	    timer(beforeInput);\r\n");
      out.write("	}\r\n");
      out.write("	const timer = (beforeInput) => {\r\n");
      out.write("	    // 검색창 비었으면 키워드 창 hide처리\r\n");
      out.write("	    if(searchInput.value === \"\") {\r\n");
      out.write("			searchBox.classList.add(\"hide\");	\r\n");
      out.write("	    } else {\r\n");
      out.write("			searchBox.classList.remove(\"hide\");\r\n");
      out.write("	    }\r\n");
      out.write("\r\n");
      out.write("	    setTimeout(() => {\r\n");
      out.write("	    	if(searchInput.value === beforeInput) {\r\n");
      out.write("				loadData(searchInput.value);\r\n");
      out.write("	    } \r\n");
      out.write("	  }, 200);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 데이터 가져옴 */\r\n");
      out.write("	const loadData = (input) => {\r\n");
      out.write("	  const url = `/book/search.jsp?keyword=${input}`;\r\n");
      out.write("	  // 매개변수 input 값에 따라 서버에서 해당 검색어가 포함된 책 데이터를 가져옴\r\n");
      out.write("	  fetch(url)\r\n");
      out.write("		.then((res) => res.json())\r\n");
      out.write("		.then(books => fillSearch(books))\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 데이터 보여줌 */\r\n");
      out.write("	const fillSearch = (books) => {\r\n");
      out.write("		searchUl.innerHTML = \"\";\r\n");
      out.write("		for (let book of books) {\r\n");
      out.write("			let li = `\r\n");
      out.write("				<li>\r\n");
      out.write("					<a href=\"/book/detail.jsp?bookNo=${book.no}\">${book.title}</a>\r\n");
      out.write("				</li>\r\n");
      out.write("			`;\r\n");
      out.write("			searchUl.innerHTML += li;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>");
      out.write('\r');
      out.write('\n');

    // 요청 파라미터 값을 조회한다.
    String keyword = request.getParameter("keyword") == null ? "" : request.getParameter("keyword");
    int ctgr = Util.toInt(request.getParameter("ctgr"), 0);
    int pageNo = Util.toInt(request.getParameter("page"), 1);
	
    List<Book> books = null;
    BookDao bookDao = new BookDao();
    
	int totalRows = 0;
	Pagination pagination = null;
	
    if (ctgr == 0) {
	    totalRows = bookDao.getTotalRows(keyword);
		pagination = new Pagination(pageNo, totalRows);
	    books = bookDao.getBooksByBookTitle(keyword, pagination.getBegin(), pagination.getEnd());
    } else {
    	totalRows = bookDao.getRowsByKeyword(keyword, ctgr);
    	pagination = new Pagination(pageNo, totalRows);
		books = bookDao.getBooksByCategoryNo(keyword, ctgr, pagination.getBegin(), pagination.getEnd());
    }
    
    CategoryDao categoryDao = new CategoryDao();
    List<Category> categories = categoryDao.getCategories();

      out.write("\r\n");
      out.write("<div id=\"divContents\">\r\n");
      out.write("	<form action=\"list.jsp\" id=\"hiddenForm\">\r\n");
      out.write("		<input type=\"hidden\" name=\"keyword\" value=\"");
      out.print(keyword );
      out.write("\">\r\n");
      out.write("		<input type=\"hidden\" name=\"page\" value=\"");
      out.print(pageNo );
      out.write("\">\r\n");
      out.write("		<input type=\"hidden\" name=\"ctgr\" value=\"");
      out.print(ctgr );
      out.write("\">\r\n");
      out.write("	</form>\r\n");
      out.write("    <div class=\"center container\">\r\n");
      out.write("    	<div class=\"subContent\">\r\n");
      out.write("             <section class=\"flex bookListW\">\r\n");
      out.write("                 <article class=\"sideBar\">\r\n");
      out.write("                 	<div id=\"facetList\">\r\n");
      out.write("					    <h3>상세 검색</h3>\r\n");
      out.write("					    <ul class=\"facetList\">\r\n");
      out.write("					        <li>\r\n");
      out.write("					            <dl>\r\n");
      out.write("					                <dt>\r\n");
      out.write("					                    <span>카테고리별 조회</span>\r\n");
      out.write("					                </dt>\r\n");
      out.write("					                <dd>\r\n");
      out.write("					                    <ul>\r\n");
      out.write("					                        <li>\r\n");
      out.write("					                        	<input type=\"radio\" name=\"ctgr\" class=\"bookCtgr\" id=\"radioCtgr0\" value=\"0\" checked onClick=\"getCategoryNo(event);\">\r\n");
      out.write("					                            <label for=\"radioCtgr0\">전체</label>\r\n");
      out.write("					                        </li>\r\n");

for(Category category : categories) {


      out.write("					                        <li>\r\n");
      out.write("					                        	<input type=\"radio\" name=\"ctgr\" class=\"bookCtgr\" id=\"radioCtgr");
      out.print(category.getNo());
      out.write("\" value=\"");
      out.print(category.getNo());
      out.write("\" onClick=\"getCategoryNo(event);\" ");
      out.print(category.getNo() == ctgr ? "checked" : "" );
      out.write(">\r\n");
      out.write("					                            <label for=\"radioCtgr");
      out.print(category.getNo());
      out.write("\">\r\n");
      out.write("					                            	");
      out.print(category.getName() );
      out.write("\r\n");
      out.write("				                            	</label>\r\n");
      out.write("					                        </li>\r\n");

	}

      out.write("\r\n");
      out.write("					                    </ul>\r\n");
      out.write("					                </dd>\r\n");
      out.write("					            </dl>\r\n");
      out.write("					        </li>\r\n");
      out.write("					    </ul>\r\n");
      out.write("					</div>\r\n");
      out.write("                 </article>\r\n");
      out.write("                 <section class=\"bookList\">\r\n");
      out.write("                 	<p class=\"info text-end mb-1\">총 <span class=\"total bold\">");
      out.print(totalRows );
      out.write("</span>건 조회되었습니다.</p>\r\n");

if(!books.isEmpty()) {
	for(Book book : books) {


      out.write("\r\n");
      out.write("                   	<div class=\"card mb-3 book\">\r\n");
      out.write("                         <div class=\"row g-0\">\r\n");
      out.write("                             <div class=\"col-md-2\">\r\n");
      out.write("                             	<a href=\"/book/detail.jsp?bookNo=");
      out.print(book.getNo() );
      out.write("\">\r\n");
      out.write("	                                <img src=\"");
      out.print(book.getCover() );
      out.write("\" class=\"img-thumbnail bookImg\" alt=\"");
      out.print(book.getTitle() );
      out.write("\">                             	\r\n");
      out.write("                             	</a>\r\n");
      out.write("                             </div>\r\n");
      out.write("                             <div class=\"col-md-10\">\r\n");
      out.write("                                 <div class=\"card-body\">\r\n");
      out.write("                                     <a href=\"/book/detail.jsp?bookNo=");
      out.print(book.getNo() );
      out.write("\" \r\n");
      out.write("                                     class=\"card-title ellipsis\">\r\n");
      out.write("                                     	");
      out.print(book.getTitle() );
      out.write("\r\n");
      out.write("										<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-arrow-right-short\" viewBox=\"0 0 16 16\">\r\n");
      out.write("										  <path fill-rule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5A.5.5 0 0 1 4 8\"/>\r\n");
      out.write("										</svg>\r\n");
      out.write("                                   	</a>\r\n");
      out.write("                                    <div class=\"card-text\">\r\n");
      out.write("	                                    <p class=\"middleText\">");
      out.print(book.getAuthor() );
      out.write("</p>\r\n");
      out.write("	                                    <p class=\"text-body-secondary\">");
      out.print(book.getPublisher() );
      out.write("</p>\r\n");
      out.write("	                                    <p class=\"text-body-secondary\">");
      out.print(Util.toCurrency(book.getPrice()) );
      out.write("원</p>\r\n");
      out.write("	                                    <p class=\"text-body-secondary\">");
      out.print(book.getDate() );
      out.write("</p>\r\n");
      out.write("	                                    <div class=\"bookStatus mt-2\">\r\n");

		List<Board> boards = bookDao.getSellsByBookNo(book.getNo());
		if(!boards.isEmpty()) {

      out.write("\r\n");
      out.write("	                                    	<div class=\"sellY\">\r\n");
      out.write("	                                    		<p class=\"marks\">\r\n");
      out.write("	                                    			가격 비교하기 \r\n");
      out.write("	                                    			<span class=\"highlight\">");
      out.print(book.getTransCount() );
      out.write("</span>건 \r\n");
      out.write("	                                    		</p>\r\n");
      out.write("	                                    		<div class=\"moreWrap\">\r\n");
      out.write("		                                    		<ul class=\"card-text mt-2 boardList\" id=\"ul-book-sell-list-");
      out.print(book.getNo());
      out.write("\" data-folding=\"yes\">\r\n");

				for (Board board : boards) {

      out.write("\r\n");
      out.write("		                                    			<li class=\"d-flex justify-between\">\r\n");
      out.write("		                                    				<p class=\"w-50 ellipsis\">\r\n");
      out.write("			                                    				<a class=\"link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover\" \r\n");
      out.write("			                                    					href=\"/sell/detail.jsp?no=");
      out.print(board.getNo() );
      out.write("\">\r\n");
      out.write("			                                    					");
      out.print(board.getTitle() );
      out.write("\r\n");
      out.write("																</a>\r\n");
      out.write("		                                    				</p>\r\n");
      out.write("		                                    				<p>\r\n");
      out.write("		                                    					<span class=\"price\">");
      out.print(Util.toCurrency(board.getPrice()) );
      out.write("</span>원\r\n");
      out.write("		                                    				</p>\r\n");
      out.write("		                                    			</li>\r\n");

	 			}

      out.write("\r\n");
      out.write("	                                    			</ul>\r\n");
      out.write("	            ");

	            	if (boards.size() >= 3) {
	            
      out.write("\r\n");
      out.write("	            \r\n");
      out.write("	            								<button class=\"btn-sm moreBtn btn btn-outline-dark w-100\" onclick=\"moreBtnClick(event, ");
      out.print(book.getNo());
      out.write(");\">더보기</button>\r\n");
      out.write("	           	");

	            	}
	            
      out.write("\r\n");
      out.write("	                                    		</div>\r\n");
      out.write("	                                    	</div>\r\n");
      out.write("	                                    	\r\n");

		} else {

      out.write("\r\n");
      out.write("											<div class=\"sellN\">\r\n");
      out.write("	                                    		<p class=\"card-text mt-1\">거래할 수 있는 중고 책이 존재하지 않습니다.</p>\r\n");
      out.write("	                                    		<div class=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n");
      out.write("		                                    		<a href=\"/purchase/insert-form.jsp?bookNo=");
      out.print(book.getNo() );
      out.write("\" class=\"btn btn-sm btn-outline-secondary\">구매글 쓰러 가기</a>\r\n");
      out.write("													<a href=\"/sell/insert-form.jsp?bookNo=");
      out.print(book.getNo() );
      out.write("\" class=\"btn btn-sm btn-outline-secondary\">판매글 쓰러 가기</a>\r\n");
      out.write("												</div>\r\n");
      out.write("	                                    	</div>\r\n");

		}

      out.write("\r\n");
      out.write("	                                    </div>\r\n");
      out.write("                                  </div>\r\n");
      out.write("                              	</div>\r\n");
      out.write("                             </div>\r\n");
      out.write("                         </div>\r\n");
      out.write("                     </div>\r\n");

	}

	if (totalRows > 0) { 
		int beginPage = pagination.getBeginPage();
		int endPage = pagination.getEndPage();
		
		int totalEndPage = pagination.getTotalPages();

      out.write("\r\n");
      out.write("					<div>\r\n");
      out.write("						<ul class=\"pagination justify-content-center\">\r\n");
      out.write("								<li>\r\n");
      out.write("									<a href=\"list.jsp?keyword=");
      out.print(keyword );
      out.write("&page=1&ctgr=");
      out.print(ctgr );
      out.write("\" class=\"page-link ");
      out.print(pagination.isFirst() ? "disabled" : "" );
      out.write("\">\r\n");
      out.write("										<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-double-left\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  <path fill-rule=\"evenodd\" d=\"M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0\"/>\r\n");
      out.write("  <path fill-rule=\"evenodd\" d=\"M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0\"/>\r\n");
      out.write("</svg>\r\n");
      out.write("									</a>\r\n");
      out.write("								</li>\r\n");
      out.write("						\r\n");
      out.write("								<li class=\"page-item ");
      out.print(pagination.isFirst() ? "disabled" : "" );
      out.write("\">\r\n");
      out.write("									<a href=\"list.jsp?keyword=");
      out.print(keyword );
      out.write("&page=");
      out.print(pagination.getPrev() );
      out.write("&ctgr=");
      out.print(ctgr );
      out.write("\" class=\"page-link\">\r\n");
      out.write("										<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-left\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  <path fill-rule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0\"/>\r\n");
      out.write("</svg>\r\n");
      out.write("									</a>\r\n");
      out.write("								</li>\r\n");

		for (int num = beginPage; num <= endPage; num++) {

      out.write("\r\n");
      out.write("								<li class=\"page-item\">\r\n");
      out.write("									<a href=\"list.jsp?keyword=");
      out.print(keyword );
      out.write("&page=");
      out.print(num );
      out.write("&ctgr=");
      out.print(ctgr );
      out.write("\" \r\n");
      out.write("									class=\"page-link ");
      out.print(pageNo == num ? "active" : "" );
      out.write("\" >\r\n");
      out.write("										");
      out.print(num );
      out.write("\r\n");
      out.write("									</a>\r\n");
      out.write("								</li>\r\n");

		}

      out.write("				\r\n");
      out.write("								<li class=\"page-item ");
      out.print(pagination.isLast() ? "disabled" : "" );
      out.write("\">\r\n");
      out.write("									<a href=\"list.jsp?keyword=");
      out.print(keyword );
      out.write("&page=");
      out.print(pagination.getNext() );
      out.write("&ctgr=");
      out.print(ctgr );
      out.write("\" class=\"page-link\">\r\n");
      out.write("										<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-right\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  <path fill-rule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708\"/>\r\n");
      out.write("</svg>\r\n");
      out.write("									</a>\r\n");
      out.write("								</li>\r\n");
      out.write("								\r\n");
      out.write("								<li>\r\n");
      out.write("									<a href=\"list.jsp?keyword=");
      out.print(keyword );
      out.write("&page=");
      out.print(totalEndPage );
      out.write("&ctgr=");
      out.print(ctgr );
      out.write("\" class=\"page-link ");
      out.print(pagination.isLast() ? "disabled" : "" );
      out.write("\">\r\n");
      out.write("										<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-double-right\" viewBox=\"0 0 16 16\">\r\n");
      out.write("	  <path fill-rule=\"evenodd\" d=\"M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708\"/>\r\n");
      out.write("	  <path fill-rule=\"evenodd\" d=\"M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708\"/>\r\n");
      out.write("	</svg>\r\n");
      out.write("									</a>\r\n");
      out.write("								</li>\r\n");
      out.write("							</ul>\r\n");
      out.write("					</div>\r\n");

	}
} else {

      out.write("\r\n");
      out.write("					<div class=\"card book noData border-dark rounded text-center p-5 mb-2 w-100 h-100 justify-content-center\">\r\n");
      out.write("						<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" class=\"bi bi-box-seam\" viewBox=\"0 0 16 16\" style=\"margin: 0 auto;\"><path d=\"M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5l2.404.961L10.404 2zm3.564 1.426L5.596 5 8 5.961 14.154 3.5zm3.25 1.7-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464z\"/></svg>\r\n");
      out.write("						<p class=\"mt-3\">해당 조건의 도서를 조회할 수 없습니다.</p>\r\n");
      out.write("					</div>\r\n");

}

      out.write("\r\n");
      out.write("                 </section>\r\n");
      out.write("             </section>\r\n");
      out.write("		</div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<footer id=\"divFooter\">\r\n");
      out.write("    <div class=\"center\">\r\n");
      out.write("        <p class=\"bold\">2404 2조</p>\r\n");
      out.write("        <p>SEMI PROJECT</p>\r\n");
      out.write("        <p class=\"contact\">BOOKOREA@naver.com</p>\r\n");
      out.write("    </div>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	let moreList = document.querySelector(\".moreWrap\");\r\n");
      out.write("	document.querySelectorAll(\".boardList\").forEach(function(el, index){\r\n");
      out.write("		let liCount = el.childElementCount;\r\n");
      out.write("		\r\n");
      out.write("		if (liCount > 3){\r\n");
      out.write("			el.classList.add(\"toggle\");\r\n");
      out.write("		} else {\r\n");
      out.write("			el.classList.remove(\"toggle\");\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	function moreBtnClick(event, bookNo) {\r\n");
      out.write("		let ul = document.getElementById(\"ul-book-sell-list-\" + bookNo)\r\n");
      out.write("		ul.classList.toggle(\"toggle\");\r\n");
      out.write("		\r\n");
      out.write("		let folding = ul.getAttribute(\"data-folding\");\r\n");
      out.write("		\r\n");
      out.write("		if (folding == 'yes') {// yes,  text= 접기\r\n");
      out.write("			event.target.innerHTML = \"접기\";\r\n");
      out.write("			ul.setAttribute(\"data-folding\", \"no\");			\r\n");
      out.write("		} else if (folding == 'no'){\r\n");
      out.write("			event.target.innerHTML = \"더보기\";\r\n");
      out.write("			ul.setAttribute(\"data-folding\", \"yes\");\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
