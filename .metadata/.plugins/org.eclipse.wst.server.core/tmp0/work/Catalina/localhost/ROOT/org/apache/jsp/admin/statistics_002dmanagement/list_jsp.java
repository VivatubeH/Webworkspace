/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-09-27 02:06:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin.statistics_002dmanagement;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import domain.admin.dao.AdminDao;
import oracle.sql.json.OracleJsonArray;
import utils.Util;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/admin/common/sidebar.jsp", Long.valueOf(1727275102869L));
    _jspx_dependants.put("/common/common.jsp", Long.valueOf(1727275102794L));
    _jspx_dependants.put("/admin/common/login.jsp", Long.valueOf(1727275102781L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("utils.Util");
    _jspx_imports_classes.add("oracle.sql.json.OracleJsonArray");
    _jspx_imports_classes.add("domain.admin.dao.AdminDao");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script>\r\n");
      out.write("    <title>사이트 통계 확인하기 페이지</title>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/guide.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" crossorigin=\"anonymous\"></script>\r\n");

	// 전에 온 페이지 주소 저장
	String returnURL = request.getRequestURL().toString();
	String queryString = request.getQueryString();
	returnURL += queryString != null ? "?" + queryString : "";

	session.setAttribute("returnURL", returnURL);	
	
	// 캐시 삭제
	response.setHeader("Cache-Control", "no-cache, no-store");
	response.setHeader("Pragma", "no-cache");
	response.setDateHeader("Expires", 0);

      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    .sidebar .nav-link:hover {\r\n");
      out.write("        background-color: #444; \r\n");
      out.write("    }\r\n");
      out.write("    .btn-danger {\r\n");
      out.write("        background-color: #dc3545; \r\n");
      out.write("        border-color: #dc3545; \r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("	관리자의 모든 디렉토리에서 관리자인지 여부를 검사하기 위한 공통 기능.	\r\n");
      out.write("-->\r\n");

	// user/login.jsp에서 세션에서 USERID, USERNICKNAME, USERTYPE를 가져온다.
	// 저장된 상태로 admin/index.jsp로 전달된다.
	String userId = (String)session.getAttribute("USERID");
	String userNickName = (String)session.getAttribute("USERNICKNAME");
	String userType = (String)session.getAttribute("USERTYPE");
	
	// 만약에 userType이 "null"이거나 ADMIN이 아니면 관리자로 로그인 된 것이 아니니 
	// 바로 ../user/login-form.jsp로 돌려보낸다.
	if (userType == null || !userType.equals("ADMIN")) {
		response.sendRedirect("/user/login-form.jsp?error=admin");
		return;
	}

      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("	사이트 통계를 낼 때 필요한 데이터\r\n");
      out.write("	\r\n");
      out.write("	회원 -> 활성화/비활성화 회원 비율\r\n");
      out.write("	[ 유저 타입 별 유저 수를 조회하는 메소드 ]\r\n");
      out.write("	[ 활성화 회원 수 조회, 비활성화 회원 수 조회 ]\r\n");
      out.write("	 사용자/관리자 회원 비율, 이메일 도메인별 회원 분포,\r\n");
      out.write("         지역별 회원 분포\r\n");
      out.write("\r\n");
      out.write("도서 -> 카테고리별 도서 분포, 금액별 도서 분포\r\n");
      out.write("\r\n");
      out.write("게시글 -> 게시판별 게시글 비율, \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("회원\r\n");
      out.write("1. 활성화/ 비활성화 회원 비율\r\n");
      out.write("2. 이메일 도메인별 회원 분포\r\n");
      out.write("\r\n");
      out.write("도서 \r\n");
      out.write("1. 카테고리별 등록된 도서 분포\r\n");
      out.write("2. 금액별 도서 분포\r\n");
      out.write("\r\n");
      out.write("회원 변동 추이\r\n");
      out.write("1. 월별 회원 가입자수 ( 매년 해당월 )\r\n");
      out.write("2. 연도별 회원 가입자수 ( 근 5년 )\r\n");
      out.write("\r\n");
      out.write("막대 배경색\r\n");
      out.write("연한 red : 'rgba(255, 99, 132, 0.2)'\r\n");
      out.write("연한 blue : 'rgba(54, 162, 235, 0.2)'\r\n");
      out.write("연한 yellow : 'rgba(255, 206, 86, 0.2)'\r\n");
      out.write("연한 green : 'rgba(75, 192, 192, 0.2)'\r\n");
      out.write("연한 purple : 'rgba(153, 102, 255, 0.2)'\r\n");
      out.write("연한 orange : 'rgba(255, 159, 64, 0.2)'\r\n");
      out.write("\r\n");
      out.write("막대 테두리색\r\n");
      out.write("연한 red : 'rgba(255, 99, 132, 1)'\r\n");
      out.write("연한 blue : 'rgba(54, 162, 235, 1)'\r\n");
      out.write("연한 yellow : 'rgba(255, 206, 86, 1)'\r\n");
      out.write("연한 green : 'rgba(75, 192, 192, 1)'\r\n");
      out.write("연한 purple : 'rgba(153, 102, 255, 1)'\r\n");
      out.write("연한 orange : 'rgba(255, 159, 64, 1)'\r\n");
      out.write("\r\n");
      out.write("	기본적인 차트 디자인 \r\n");
      out.write("	\r\n");
      out.write("	// Bar chart\r\n");
      out.write("	new Chart(document.getElementById(\"bar-chart\"), {\r\n");
      out.write("	    type: 'bar',\r\n");
      out.write("	    data: {\r\n");
      out.write("	      labels: ['활성화', '비활성화'],\r\n");
      out.write("	      datasets: [\r\n");
      out.write("	        {\r\n");
      out.write("	          label: \"회원상태 (활성화/비활성화)\",\r\n");
      out.write("	          backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)'],\r\n");
      out.write("	          data: [activatedUserCount, unactivatedUserCount]\r\n");
      out.write("	        }\r\n");
      out.write("	      ]\r\n");
      out.write("	    },\r\n");
      out.write("	    options: {\r\n");
      out.write("	      legend: { display: true },\r\n");
      out.write("	      title: {\r\n");
      out.write("	        display: true,\r\n");
      out.write("	        text: '사이트 내의 활성화 회원과 비활성화 회원 비교'\r\n");
      out.write("	      }\r\n");
      out.write("	    }\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// Line Chart\r\n");
      out.write("	new Chart(document.getElementById(\"line-chart\"), {\r\n");
      out.write("		  type: 'line',\r\n");
      out.write("		  data: {\r\n");
      out.write("		    labels: [1500,1600,1700,1750,1800,1850,1900,1950,1999,2050],\r\n");
      out.write("		    datasets: [{ \r\n");
      out.write("		        data: [86,114,106,106,107,111,133,221,783,2478],\r\n");
      out.write("		        label: \"Africa\",\r\n");
      out.write("		        borderColor: \"#3e95cd\",\r\n");
      out.write("		        fill: false\r\n");
      out.write("		      }, { \r\n");
      out.write("		        data: [282,350,411,502,635,809,947,1402,3700,5267],\r\n");
      out.write("		        label: \"Asia\",\r\n");
      out.write("		        borderColor: \"#8e5ea2\",\r\n");
      out.write("		        fill: false\r\n");
      out.write("		      }, { \r\n");
      out.write("		        data: [168,170,178,190,203,276,408,547,675,734],\r\n");
      out.write("		        label: \"Europe\",\r\n");
      out.write("		        borderColor: \"#3cba9f\",\r\n");
      out.write("		        fill: false\r\n");
      out.write("		      }, { \r\n");
      out.write("		        data: [40,20,10,16,24,38,74,167,508,784],\r\n");
      out.write("		        label: \"Latin America\",\r\n");
      out.write("		        borderColor: \"#e8c3b9\",\r\n");
      out.write("		        fill: false\r\n");
      out.write("		      }, { \r\n");
      out.write("		        data: [6,3,2,2,7,26,82,172,312,433],\r\n");
      out.write("		        label: \"North America\",\r\n");
      out.write("		        borderColor: \"#c45850\",\r\n");
      out.write("		        fill: false\r\n");
      out.write("		      }\r\n");
      out.write("		    ]\r\n");
      out.write("		  },\r\n");
      out.write("		  options: {\r\n");
      out.write("		    title: {\r\n");
      out.write("		      display: true,\r\n");
      out.write("		      text: 'World population per region (in millions)'\r\n");
      out.write("		    }\r\n");
      out.write("		  }\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("	// pie chart\r\n");
      out.write("	new Chart(document.getElementById(\"pie-chart\"), {\r\n");
      out.write("	    type: 'pie',\r\n");
      out.write("	    data: {\r\n");
      out.write("	      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\r\n");
      out.write("	      datasets: [{\r\n");
      out.write("	        label: \"Population (millions)\",\r\n");
      out.write("	        backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\r\n");
      out.write("	        data: [2478,5267,734,784,433]\r\n");
      out.write("	      }]\r\n");
      out.write("	    },\r\n");
      out.write("	    options: {\r\n");
      out.write("	      title: {\r\n");
      out.write("	        display: true,\r\n");
      out.write("	        text: 'Predicted world population (millions) in 2050'\r\n");
      out.write("	      }\r\n");
      out.write("	    }\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// donut chart\r\n");
      out.write("	new Chart(document.getElementById(\"doughnut-chart\"), {\r\n");
      out.write("    type: 'doughnut',\r\n");
      out.write("    data: {\r\n");
      out.write("      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\r\n");
      out.write("      datasets: [\r\n");
      out.write("        {\r\n");
      out.write("          label: \"Population (millions)\",\r\n");
      out.write("          backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\r\n");
      out.write("          data: [2478,5267,734,784,433]\r\n");
      out.write("        }\r\n");
      out.write("      ]\r\n");
      out.write("    },\r\n");
      out.write("    options: {\r\n");
      out.write("      title: {\r\n");
      out.write("        display: true,\r\n");
      out.write("        text: 'Predicted world population (millions) in 2050'\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// bar-chart-horizontal\r\n");
      out.write("	new Chart(document.getElementById(\"bar-chart-horizontal\"), {\r\n");
      out.write("    type: 'horizontalBar',\r\n");
      out.write("    data: {\r\n");
      out.write("      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\r\n");
      out.write("      datasets: [\r\n");
      out.write("        {\r\n");
      out.write("          label: \"Population (millions)\",\r\n");
      out.write("          backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\r\n");
      out.write("          data: [2478,5267,734,784,433]\r\n");
      out.write("        }\r\n");
      out.write("      ]\r\n");
      out.write("    },\r\n");
      out.write("    options: {\r\n");
      out.write("      legend: { display: false },\r\n");
      out.write("      title: {\r\n");
      out.write("        display: true,\r\n");
      out.write("        text: 'Predicted world population (millions) in 2050'\r\n");
      out.write("      }\r\n");
      out.write("    }});\r\n");
      out.write("    \r\n");
      out.write("    Chart.defaults.global.defaultFontSize = 20; -- Chart의 전역 변수, 글자 크기 변경\r\n");
      out.write(" -->\r\n");
      out.write("<div class=\"d-flex\">\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("	모든 관리자 페이지에서 공통으로 사용할 사이드바	\r\n");
      out.write("-->\r\n");
      out.write(" <div class=\"sidebar p-3\" style=\"background-color: #808080; color:white;\">\r\n");
      out.write("        <div class=\"d-flex align-items-center mb-4\">\r\n");
      out.write("            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"56\" height=\"56\" fill=\"currentColor\" class=\"bi bi-person-gear\" viewBox=\"0 0 16 16\">\r\n");
      out.write(" 			<path d=\"M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m.256 7a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1zm3.63-4.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382zM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0\"></path>\r\n");
      out.write("			</svg>\r\n");
      out.write("            <span>admin</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <ul class=\"nav flex-column\">\r\n");
      out.write("        	<li class=\"nav-item\">\r\n");
      out.write("            	<a class=\"nav-link\" href=\"/admin/index.jsp\">\r\n");
      out.write("            		<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-person-gear\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					<path d=\"M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m.256 7a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1zm3.63-4.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382zM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0\"></path>\r\n");
      out.write("					</svg> 관리자 홈\r\n");
      out.write("            	</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/admin/qna-management/list.jsp\">\r\n");
      out.write("                	 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-clipboard2\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					 <path d=\"M3.5 2a.5.5 0 0 0-.5.5v12a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-12a.5.5 0 0 0-.5-.5H12a.5.5 0 0 1 0-1h.5A1.5 1.5 0 0 1 14 2.5v12a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-12A1.5 1.5 0 0 1 3.5 1H4a.5.5 0 0 1 0 1z\"/>\r\n");
      out.write("  					 <path d=\"M10 .5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5.5.5 0 0 1-.5.5.5.5 0 0 0-.5.5V2a.5.5 0 0 0 .5.5h5A.5.5 0 0 0 11 2v-.5a.5.5 0 0 0-.5-.5.5.5 0 0 1-.5-.5\"/>\r\n");
      out.write(" 					 </svg> 문의/신고 관리\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/admin/member-management/list.jsp\">\r\n");
      out.write("                 	<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-people\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					<path d=\"M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1zm-7.978-1L7 12.996c.001-.264.167-1.03.76-1.72C8.312 10.629 9.282 10 11 10c1.717 0 2.687.63 3.24 1.276.593.69.758 1.457.76 1.72l-.008.002-.014.002zM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0M6.936 9.28a6 6 0 0 0-1.23-.247A7 7 0 0 0 5 9c-4 0-5 3-5 4q0 1 1 1h4.216A2.24 2.24 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816M4.92 10A5.5 5.5 0 0 0 4 13H1c0-.26.164-1.03.76-1.724.545-.636 1.492-1.256 3.16-1.275ZM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0m3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4\"/>\r\n");
      out.write("					</svg> 회원 관리\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/admin/statistics-management/list.jsp\">\r\n");
      out.write("                	<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-bar-chart\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					<path d=\"M4 11H2v3h2zm5-4H7v7h2zm5-5v12h-2V2zm-2-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM6 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm-5 4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1z\"/>\r\n");
      out.write("					</svg> 사이트 통계\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/index.jsp\">\r\n");
      out.write("                	<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-house-door\" viewBox=\"0 0 16 16\">\r\n");
      out.write("  					<path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4z\"/>\r\n");
      out.write("					</svg> 사이트 홈\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            \r\n");
      out.write("        </ul>\r\n");
      out.write("        <div class=\"mt-auto\">\r\n");
      out.write("            <a class=\"btn btn-danger w-100\" href=\"/user/logout.jsp\" style=\"color: white;\">LOGOUT</a>\r\n");
      out.write("        </div>\r\n");
      out.write("  </div>");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		\r\n");
      out.write("		<br/>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-md-4\">\r\n");
      out.write("				<canvas id=\"pie-chart\"></canvas>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-md-8\">\r\n");
      out.write("				<canvas id=\"bar-chart-vertical\"></canvas>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br/>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-md-4\">\r\n");
      out.write("				<canvas id=\"pie-chart-2\"></canvas>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-md-5\">\r\n");
      out.write("				<canvas id=\"bar-chart-horizontal-2\"></canvas>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br/>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-md-8\">\r\n");
      out.write("				<canvas id=\"line-chart-1\"></canvas>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br/>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-md-8\">\r\n");
      out.write("				<canvas id=\"line-chart-2\"></canvas>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
 
	AdminDao adminDao = new AdminDao();

	// 활성화, 비활성화 회원 수
	int activatedUserCount = adminDao.countUserByUserStatus("활성화");
	int unactivatedUserCount = adminDao.countUserByUserStatus("비활성화");
	
	// 이메일, 도메인별 회원 분포 개수
	int naverUser = adminDao.countUserByUserDomain("naver");
	int daumUser = adminDao.countUserByUserDomain("daum");
	int googleUser = adminDao.countUserByUserDomain("gmail");
	int kakaoUser = adminDao.countUserByUserDomain("kakao");
	int otherUser = adminDao.countTotalMembersInBookstore() - (naverUser+daumUser+googleUser+kakaoUser);
	
	// 카테고리별 도서 분포 개수
	int itMobile = adminDao.countBookByBookCategory(1);
	int language = adminDao.countBookByBookCategory(2);
	int selfDevelop = adminDao.countBookByBookCategory(3);
	int naturalScience = adminDao.countBookByBookCategory(4);
	
	// 금액별 도서 분포 개수
	int below10000 = adminDao.countBookByBookPrice(0, 10000);
	int below20000 = adminDao.countBookByBookPrice(10000, 20000);
	int below30000 = adminDao.countBookByBookPrice(20000, 30000);
	int below40000 = adminDao.countBookByBookPrice(30000, 40000);
	int below50000 = adminDao.countBookByBookPrice(40000, 50000);
	int upper50000 = adminDao.countBookByBookPrice(50000, 100000000);
	
	// 연도별 가입한 회원수 [2020, 2021, 2022, 2023, 2024]
	int created2020 = adminDao.countUserByCreatedYear(2020);
	int created2021 = adminDao.countUserByCreatedYear(2021);
	int created2022 = adminDao.countUserByCreatedYear(2022);
	int created2023 = adminDao.countUserByCreatedYear(2023);
	int created2024 = adminDao.countUserByCreatedYear(2024);
	
	// 월별로 가입한 회원수 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
	int createdMonth1 = adminDao.countUserByCreatedMonth(1);
	int createdMonth2 = adminDao.countUserByCreatedMonth(2);
	int createdMonth3 = adminDao.countUserByCreatedMonth(3);
	int createdMonth4 = adminDao.countUserByCreatedMonth(4);
	int createdMonth5 = adminDao.countUserByCreatedMonth(5);
	int createdMonth6 = adminDao.countUserByCreatedMonth(6);
	int createdMonth7 = adminDao.countUserByCreatedMonth(7);
	int createdMonth8 = adminDao.countUserByCreatedMonth(8);
	int createdMonth9 = adminDao.countUserByCreatedMonth(9);
	int createdMonth10 = adminDao.countUserByCreatedMonth(10);
	int createdMonth11 = adminDao.countUserByCreatedMonth(11);
	int createdMonth12 = adminDao.countUserByCreatedMonth(12);

      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	//활성화, 비활성화 회원 수\r\n");
      out.write("	var activatedUserCount = ");
      out.print(activatedUserCount );
      out.write("\r\n");
      out.write("	var unactivatedUserCount = ");
      out.print(unactivatedUserCount );
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	// 이메일, 도메인별 회원 분포 개수\r\n");
      out.write("	var naverUser = ");
      out.print(naverUser );
      out.write("\r\n");
      out.write("	var daumUser = ");
      out.print(daumUser );
      out.write("\r\n");
      out.write("	var googleUser = ");
      out.print(googleUser );
      out.write("\r\n");
      out.write("	var kakaoUser = ");
      out.print(kakaoUser );
      out.write("\r\n");
      out.write("	var otherUser = ");
      out.print(otherUser );
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	// 카테고리별 도서 분포 개수\r\n");
      out.write("	var itMobile = ");
      out.print(itMobile );
      out.write("\r\n");
      out.write("	var language = ");
      out.print(language );
      out.write("\r\n");
      out.write("	var selfDevelop = ");
      out.print(selfDevelop );
      out.write("\r\n");
      out.write("	var naturalScience = ");
      out.print(naturalScience );
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	// 금액별 도서 분포 개수\r\n");
      out.write("	var below10000 = ");
      out.print(below10000 );
      out.write("\r\n");
      out.write("	var below20000 = ");
      out.print(below20000 );
      out.write("\r\n");
      out.write("	var below30000 = ");
      out.print(below30000 );
      out.write("\r\n");
      out.write("	var below40000 = ");
      out.print(below40000 );
      out.write("\r\n");
      out.write("	var below50000 = ");
      out.print(below50000 );
      out.write("\r\n");
      out.write("	var upper50000 = ");
      out.print(upper50000 );
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	// 연도별 가입한 회원수 [2020, 2021, 2022, 2023, 2024]\r\n");
      out.write("	var created2020 = ");
      out.print(created2020);
      out.write("\r\n");
      out.write("	var created2021 = ");
      out.print(created2021);
      out.write("\r\n");
      out.write("	var created2022 = ");
      out.print(created2022);
      out.write("\r\n");
      out.write("	var created2023 = ");
      out.print(created2023);
      out.write("\r\n");
      out.write("	var created2024 = ");
      out.print(created2024);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	// 월별로 가입한 회원수 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n");
      out.write("	var createdMonth1 = ");
      out.print(createdMonth1);
      out.write("\r\n");
      out.write("	var createdMonth2 = ");
      out.print(createdMonth2);
      out.write("\r\n");
      out.write("	var createdMonth3 = ");
      out.print(createdMonth3);
      out.write("\r\n");
      out.write("	var createdMonth4 = ");
      out.print(createdMonth4);
      out.write("\r\n");
      out.write("	var createdMonth5 = ");
      out.print(createdMonth5);
      out.write("\r\n");
      out.write("	var createdMonth6 = ");
      out.print(createdMonth6);
      out.write("\r\n");
      out.write("	var createdMonth7 = ");
      out.print(createdMonth7);
      out.write("\r\n");
      out.write("	var createdMonth8 = ");
      out.print(createdMonth8);
      out.write("\r\n");
      out.write("	var createdMonth9 = ");
      out.print(createdMonth9);
      out.write("\r\n");
      out.write("	var createdMonth10 = ");
      out.print(createdMonth10);
      out.write("\r\n");
      out.write("	var createdMonth11 = ");
      out.print(createdMonth11);
      out.write("\r\n");
      out.write("	var createdMonth12 = ");
      out.print(createdMonth12);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	Chart.defaults.global.defaultFontSize = 20;\r\n");
      out.write("	// Bar chart\r\n");
      out.write("	new Chart(document.getElementById(\"pie-chart\"), {\r\n");
      out.write("	    type: 'pie',\r\n");
      out.write("	    data: {\r\n");
      out.write("	      labels: ['Activated', 'UnActivated'],\r\n");
      out.write("	      datasets: [\r\n");
      out.write("	        {\r\n");
      out.write("	          label: \"회원상태 (활성화/비활성화)\",\r\n");
      out.write("	          backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)'],\r\n");
      out.write("	          data: [activatedUserCount, unactivatedUserCount]\r\n");
      out.write("	        }\r\n");
      out.write("	      ]\r\n");
      out.write("	    },\r\n");
      out.write("	    options: {\r\n");
      out.write("	      legend: { display: true },\r\n");
      out.write("	      title: {\r\n");
      out.write("	        display: true,\r\n");
      out.write("	        text: '사이트 내의 활성화 회원과 비활성화 회원 비교'\r\n");
      out.write("	      }\r\n");
      out.write("	    }\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// bar-chart-horizontal\r\n");
      out.write("	new Chart(document.getElementById(\"bar-chart-vertical\"), {\r\n");
      out.write("	    type: \"bar\",\r\n");
      out.write("	    data: {\r\n");
      out.write("	      labels: [\"네이버\", \"다음\", \"지메일\", \"카카오\", \"기타\"],\r\n");
      out.write("	      datasets: [\r\n");
      out.write("	        {\r\n");
      out.write("	          label: \"이메일 (네이버/다음/지메일/카카오/기타) \",\r\n");
      out.write("	          backgroundColor: ['rgba(255, 99, 132, 0.2)',\r\n");
      out.write("					        	'rgba(54, 162, 235, 0.2)',\r\n");
      out.write("					        	'rgba(255, 206, 86, 0.2)',\r\n");
      out.write("					        	'rgba(75, 192, 192, 0.2)',\r\n");
      out.write("					        	'rgba(153, 102, 255, 0.2)'],\r\n");
      out.write("	          data: [naverUser, daumUser, googleUser, kakaoUser, otherUser]\r\n");
      out.write("	        }\r\n");
      out.write("	      ]\r\n");
      out.write("	    },\r\n");
      out.write("	    options: {\r\n");
      out.write("	      legend: { display: true },\r\n");
      out.write("	      title: {\r\n");
      out.write("	        display: true,\r\n");
      out.write("	        text: '사이트 내의 유저별 이메일 도메인 현황'\r\n");
      out.write("	      }\r\n");
      out.write("	    }\r\n");
      out.write("    });\r\n");
      out.write("	\r\n");
      out.write("	// pie-chart-2\r\n");
      out.write("	new Chart(document.getElementById(\"pie-chart-2\"), {\r\n");
      out.write("	    type: \"pie\",\r\n");
      out.write("	    data: {\r\n");
      out.write("	      labels: [\"IT/모바일\", \"언어/외국어\", \"자기개발\", \"자연과학\"],\r\n");
      out.write("	      datasets: [\r\n");
      out.write("	        {\r\n");
      out.write("	          label: \"카테고리별 도서 분포 (IT-모바일/언어-외국어/자기개발/자연과학) \",\r\n");
      out.write("	          backgroundColor: ['rgba(255, 99, 132, 0.2)',\r\n");
      out.write("					        	'rgba(54, 162, 235, 0.2)',\r\n");
      out.write("					        	'rgba(255, 206, 86, 0.2)',\r\n");
      out.write("					        	'rgba(75, 192, 192, 0.2)'],\r\n");
      out.write("	          data: [itMobile, language, selfDevelop, naturalScience]\r\n");
      out.write("	        }\r\n");
      out.write("	      ]\r\n");
      out.write("	    },\r\n");
      out.write("	    options: {\r\n");
      out.write("	      legend: { display: true },\r\n");
      out.write("	      title: {\r\n");
      out.write("	        display: true,\r\n");
      out.write("	        text: '사이트에 등록된 도서의 카테고리별 분포'\r\n");
      out.write("	      }\r\n");
      out.write("	    }\r\n");
      out.write("    });\r\n");
      out.write("	\r\n");
      out.write("	// bar-chart-horizontal-2\r\n");
      out.write("	new Chart(document.getElementById(\"bar-chart-horizontal-2\"), {\r\n");
      out.write("	    type: \"horizontalBar\",\r\n");
      out.write("	    data: {\r\n");
      out.write("	      labels: [\"1만원 이하\", \"1만원대\", \"2만원대\", \"3만원대\", \"4만원대\", \"5만원 이상\"],\r\n");
      out.write("	      datasets: [\r\n");
      out.write("	        {\r\n");
      out.write("	          label: \"금액별 도서분포 (1만원 단위 분류) \",\r\n");
      out.write("	          backgroundColor: ['rgba(255, 99, 132, 0.2)',\r\n");
      out.write("					        	'rgba(54, 162, 235, 0.2)',\r\n");
      out.write("					        	'rgba(255, 206, 86, 0.2)',\r\n");
      out.write("					        	'rgba(75, 192, 192, 0.2)',\r\n");
      out.write("					        	'rgba(153, 102, 255, 0.2)',\r\n");
      out.write("					        	'rgba(255, 159, 64, 0.2)'],\r\n");
      out.write("	          data: [below10000, below20000, below30000, below40000, below50000, upper50000]\r\n");
      out.write("	        }\r\n");
      out.write("	      ]\r\n");
      out.write("	    },\r\n");
      out.write("	    options: {\r\n");
      out.write("	      legend: { display: true },\r\n");
      out.write("	      title: {\r\n");
      out.write("	        display: true,\r\n");
      out.write("	        text: '금액별 도서 분포'\r\n");
      out.write("	      }\r\n");
      out.write("	    }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("	// line-chart-1\r\n");
      out.write("	new Chart(document.getElementById(\"line-chart-1\"), {\r\n");
      out.write("		  type: 'line',\r\n");
      out.write("		  data: {\r\n");
      out.write("		    labels: [\"2020\", \"2021\", \"2022\", \"2023\", \"2024\"],\r\n");
      out.write("		    datasets: [{ \r\n");
      out.write("		        data: [created2020, created2021, created2022, created2023, created2024],\r\n");
      out.write("		        label: \"최근 5년 연도별 가입자수 추이\",\r\n");
      out.write("		        backgroundColor: 'rgba(255, 99, 132, 1)',\r\n");
      out.write("		        borderColor: \"rgba(255, 99, 132, 1)\",\r\n");
      out.write("		        fill: false\r\n");
      out.write("		      }\r\n");
      out.write("		    ]\r\n");
      out.write("		  },\r\n");
      out.write("		  options: {\r\n");
      out.write("		    title: {\r\n");
      out.write("		      display: true,\r\n");
      out.write("		      text: '2020년-2024년 연도별 사이트 가입자수 추이'\r\n");
      out.write("		    }\r\n");
      out.write("		  }\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	// line-chart-2\r\n");
      out.write("	new Chart(document.getElementById(\"line-chart-2\"), {\r\n");
      out.write("		  type: 'line',\r\n");
      out.write("		  data: {\r\n");
      out.write("		    labels: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\r\n");
      out.write("		    datasets: [{ \r\n");
      out.write("		        data: [createdMonth1, createdMonth2, createdMonth3, createdMonth4,\r\n");
      out.write("		        	   createdMonth5, createdMonth6, createdMonth7, createdMonth8,\r\n");
      out.write("					   createdMonth9, createdMonth10, createdMonth11, createdMonth12\r\n");
      out.write("					   ],\r\n");
      out.write("		        label: \"월별 가입자 추이\",\r\n");
      out.write("		        borderColor: 'rgba(255, 99, 132, 1)',\r\n");
      out.write("		        backgroundColor: 'rgba(255, 99, 132, 1)',\r\n");
      out.write("		        fill: false\r\n");
      out.write("		      }\r\n");
      out.write("		    ]\r\n");
      out.write("		  },\r\n");
      out.write("		  options: {\r\n");
      out.write("		    title: {\r\n");
      out.write("		      display: true,\r\n");
      out.write("		      text: '월별 가입자 추이'\r\n");
      out.write("		    }\r\n");
      out.write("		  }\r\n");
      out.write("		});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
